name: SonarCloud
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest

    steps:
      # Step 1: Checkout code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for SonarCloud analysis

      # Step 2: Install SonarCloud scanner
      - name: Install SonarCloud scanner
        shell: powershell
        run: |
          dotnet tool install --global dotnet-sonarscanner

      # Step 3: Install dotnet-coverage tool
      - name: Install dotnet-coverage
        shell: powershell
        run: |
          dotnet tool install --global dotnet-coverage

      # Step 4: SonarCloud analysis begin
      - name: SonarCloud Analysis Begin
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          dotnet-sonarscanner begin /k:"your-project-key" /o:"your-organization-key" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths="coverage.xml" /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      # Step 5: Build the project
      - name: Build the project
        shell: powershell
        run: dotnet build --no-incremental

      # Step 6: Run tests and collect coverage using dotnet-coverage
      - name: Run tests and collect coverage
        shell: powershell
        run: |
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"

      # Step 7: SonarCloud analysis end
      - name: SonarCloud Analysis End
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
